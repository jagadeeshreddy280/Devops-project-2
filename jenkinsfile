Build Dockerfile --> push to DockerHub --> Deploy on EKS

pipeline{
agent any
 tools{
maven 'maven-3'
}
environment {
                IMAGE_TAG ="${BUILD_NUMBER}"
                DOCKERHUB_CREDENTIALS=credentials('dockerhublogin')
}
stages{
stage('GIT'){
steps{
 checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'Gitlogin',url: 'https://github.com/jagadeeshreddy280/onlinebookstore.git']]]) 
}
}
stage('Build'){
 steps{
sh 'mvn clean install package'
}
}
stage('Docker Image Build'){
steps{
sh 'docker build -t jagadeesh/dockerpipeline:${BUILD_NUMBER} .'
}
}
stage('Login') {

			steps {
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}
stage('Push to Dockerhub'){
steps{
sh 'docker push jagadeesh/dockerpipeline:${BUILD_NUMBER}'
 }
 }
stage('update in git'){
steps{
script{
sh  "cat app.yaml"
sh  "sed -i 's+jagadeesh/dockerpipeline.*+jagadeesh/dockerpipeline:${BUILD_NUMBER}\"+g' app.yaml"
sh  "cat app.yaml"
sh  "git add app.yaml"
sh  "git commit -m 'update the dockerimage with new tag:${IMAGE_TAG}'"
withCredentials([gitUsernamePassword(credentialsId: 'Gitlogin', gitToolName: 'Default')]) {
    sh  "git push git@github.com:jagadeesh/Devops-project-2s.git HEAD:main"
}
}
}
}
stage('Deploy to k8s'){
steps{
    sshagent(['k8s']) {
        sh "scp -o StrictHostKeyChecking=no nodejsapp.yaml ec2-user@13.232.170.209:/home/ec2-user"
       script{
            try{
                sh "ssh ec2-user@13.232.170.209 kubectl apply -f ."
            }
            catch(error){
                //sh "ssh ec2-user@3.108.215.230 kubectl create -f ."
            }
        }
}
}
}
}
}
